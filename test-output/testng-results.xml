<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="53102" started-at="2020-02-28T01:10:59Z" finished-at="2020-02-28T01:11:52Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="53102" started-at="2020-02-28T01:10:59Z" finished-at="2020-02-28T01:11:52Z">
      <class name="com.qa.test.PutUserApiTest">
        <test-method status="PASS" signature="updateUserApiTest()[pri:0, instance:com.qa.test.PutUserApiTest@5622fdf]" name="updateUserApiTest" duration-ms="1185" started-at="2020-02-28T01:11:50Z" finished-at="2020-02-28T01:11:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUserApiTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qa.test.PutUserApiTest@5622fdf]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-28T01:11:50Z" finished-at="2020-02-28T01:11:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- com.qa.test.PutUserApiTest -->
      <class name="com.qa.test.GetUserApiTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qa.test.GetUserApiTest@4883b407]" name="setUp" is-config="true" duration-ms="565" started-at="2020-02-28T01:11:51Z" finished-at="2020-02-28T01:11:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="getUserApiPageCountTest()[pri:0, instance:com.qa.test.GetUserApiTest@4883b407]" name="getUserApiPageCountTest" duration-ms="121" started-at="2020-02-28T01:11:51Z" finished-at="2020-02-28T01:11:52Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [84] but found [101]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [84] but found [101]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at com.qa.test.GetUserApiTest.getUserApiPageCountTest(GetUserApiTest.java:54)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserApiPageCountTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qa.test.GetUserApiTest@4883b407]" name="setUp" is-config="true" duration-ms="591" started-at="2020-02-28T01:11:52Z" finished-at="2020-02-28T01:11:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getUserApiStatusCodeTest()[pri:0, instance:com.qa.test.GetUserApiTest@4883b407]" name="getUserApiStatusCodeTest" duration-ms="153" started-at="2020-02-28T01:11:52Z" finished-at="2020-02-28T01:11:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserApiStatusCodeTest -->
      </class> <!-- com.qa.test.GetUserApiTest -->
      <class name="com.qa.test.DeleteUserApiTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qa.test.DeleteUserApiTest@6093dd95]" name="setUp" is-config="true" duration-ms="5" started-at="2020-02-28T01:11:43Z" finished-at="2020-02-28T01:11:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="updateUserApiTest()[pri:0, instance:com.qa.test.DeleteUserApiTest@6093dd95]" name="updateUserApiTest" duration-ms="6768" started-at="2020-02-28T01:11:43Z" finished-at="2020-02-28T01:11:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUserApiTest -->
      </class> <!-- com.qa.test.DeleteUserApiTest -->
      <class name="com.qa.test.PostUserApiTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qa.test.PostUserApiTest@6d4b1c02]" name="setUp" is-config="true" duration-ms="16" started-at="2020-02-28T01:11:09Z" finished-at="2020-02-28T01:11:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createUserApiTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.test.PostUserApiTest@6d4b1c02]" name="createUserApiTest" duration-ms="32931" started-at="2020-02-28T01:11:09Z" data-provider="getData" finished-at="2020-02-28T01:11:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tom3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hanks]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[male]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tomhanks3@zmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[active]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserApiTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qa.test.PostUserApiTest@6d4b1c02]" name="setUp" is-config="true" duration-ms="1" started-at="2020-02-28T01:11:42Z" finished-at="2020-02-28T01:11:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createUserApiTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.test.PostUserApiTest@6d4b1c02]" name="createUserApiTest" duration-ms="659" started-at="2020-02-28T01:11:42Z" data-provider="getData" finished-at="2020-02-28T01:11:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[john4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[swan]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[male]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[johnswam4@zmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[inactive]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserApiTest -->
      </class> <!-- com.qa.test.PostUserApiTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
